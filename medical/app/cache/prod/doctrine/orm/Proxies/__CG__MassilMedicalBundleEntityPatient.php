<?php

namespace Proxies\__CG__\Massil\MedicalBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Patient extends \Massil\MedicalBundle\Entity\Patient implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'nom', 'prenom', 'dateNaissance', 'sexe', 'assure', 'etatCivil', 'dateAjout', 'dateEdition', 'consultations', 'antecedants', 'patientSalleAttentes');
        }

        return array('__isInitialized__', 'id', 'nom', 'prenom', 'dateNaissance', 'sexe', 'assure', 'etatCivil', 'dateAjout', 'dateEdition', 'consultations', 'antecedants', 'patientSalleAttentes');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Patient $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function updateDateEdition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateDateEdition', array());

        return parent::updateDateEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', array($nom));

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', array());

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', array($prenom));

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', array());

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateNaissance($dateNaissance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateNaissance', array($dateNaissance));

        return parent::setDateNaissance($dateNaissance);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateNaissance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateNaissance', array());

        return parent::getDateNaissance();
    }

    /**
     * {@inheritDoc}
     */
    public function setSexe($sexe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSexe', array($sexe));

        return parent::setSexe($sexe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSexe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSexe', array());

        return parent::getSexe();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssure($assure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssure', array($assure));

        return parent::setAssure($assure);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssure', array());

        return parent::getAssure();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtatCivil($etatCivil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtatCivil', array($etatCivil));

        return parent::setEtatCivil($etatCivil);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtatCivil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtatCivil', array());

        return parent::getEtatCivil();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAjout($dateAjout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAjout', array($dateAjout));

        return parent::setDateAjout($dateAjout);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAjout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAjout', array());

        return parent::getDateAjout();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEdition($dateEdition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEdition', array($dateEdition));

        return parent::setDateEdition($dateEdition);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEdition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEdition', array());

        return parent::getDateEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function addConsultation(\Massil\MedicalBundle\Entity\Consultation $consultation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConsultation', array($consultation));

        return parent::addConsultation($consultation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConsultation(\Massil\MedicalBundle\Entity\Consultation $consultation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConsultation', array($consultation));

        return parent::removeConsultation($consultation);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsultations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsultations', array());

        return parent::getConsultations();
    }

    /**
     * {@inheritDoc}
     */
    public function addAntecedant(\Massil\MedicalBundle\Entity\Antecedant $antecedant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAntecedant', array($antecedant));

        return parent::addAntecedant($antecedant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAntecedant(\Massil\MedicalBundle\Entity\Antecedant $antecedant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAntecedant', array($antecedant));

        return parent::removeAntecedant($antecedant);
    }

    /**
     * {@inheritDoc}
     */
    public function getAntecedants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAntecedants', array());

        return parent::getAntecedants();
    }

    /**
     * {@inheritDoc}
     */
    public function addPatientSalleAttente(\Massil\MedicalBundle\Entity\PatientSalleAttente $patientSalleAttente)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPatientSalleAttente', array($patientSalleAttente));

        return parent::addPatientSalleAttente($patientSalleAttente);
    }

    /**
     * {@inheritDoc}
     */
    public function removePatientSalleAttente(\Massil\MedicalBundle\Entity\PatientSalleAttente $patientSalleAttente)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePatientSalleAttente', array($patientSalleAttente));

        return parent::removePatientSalleAttente($patientSalleAttente);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatientSalleAttentes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatientSalleAttentes', array());

        return parent::getPatientSalleAttentes();
    }

}
