<?php

namespace Proxies\__CG__\Massil\MedicalBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Consultation extends \Massil\MedicalBundle\Entity\Consultation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'motif', 'date', 'age', 'poids', 'taille', 'tensionArterielle', 'temperature', 'perimetreThoracique', 'perimetreBrachial', 'scapTriceps', 'diagnostic', 'patient', 'ordonnance', 'examen');
        }

        return array('__isInitialized__', 'id', 'motif', 'date', 'age', 'poids', 'taille', 'tensionArterielle', 'temperature', 'perimetreThoracique', 'perimetreBrachial', 'scapTriceps', 'diagnostic', 'patient', 'ordonnance', 'examen');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Consultation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMotif($motif)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMotif', array($motif));

        return parent::setMotif($motif);
    }

    /**
     * {@inheritDoc}
     */
    public function getMotif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMotif', array());

        return parent::getMotif();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAge($age)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAge', array($age));

        return parent::setAge($age);
    }

    /**
     * {@inheritDoc}
     */
    public function getAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAge', array());

        return parent::getAge();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoids($poids)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoids', array($poids));

        return parent::setPoids($poids);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoids()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoids', array());

        return parent::getPoids();
    }

    /**
     * {@inheritDoc}
     */
    public function setTensionArterielle($tensionArterielle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTensionArterielle', array($tensionArterielle));

        return parent::setTensionArterielle($tensionArterielle);
    }

    /**
     * {@inheritDoc}
     */
    public function getTensionArterielle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTensionArterielle', array());

        return parent::getTensionArterielle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemperature($temperature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemperature', array($temperature));

        return parent::setTemperature($temperature);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemperature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemperature', array());

        return parent::getTemperature();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerimetreThoracique($perimetreThoracique)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerimetreThoracique', array($perimetreThoracique));

        return parent::setPerimetreThoracique($perimetreThoracique);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerimetreThoracique()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerimetreThoracique', array());

        return parent::getPerimetreThoracique();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerimetreBrachial($perimetreBrachial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerimetreBrachial', array($perimetreBrachial));

        return parent::setPerimetreBrachial($perimetreBrachial);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerimetreBrachial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerimetreBrachial', array());

        return parent::getPerimetreBrachial();
    }

    /**
     * {@inheritDoc}
     */
    public function setScapTriceps($scapTriceps)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScapTriceps', array($scapTriceps));

        return parent::setScapTriceps($scapTriceps);
    }

    /**
     * {@inheritDoc}
     */
    public function getScapTriceps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScapTriceps', array());

        return parent::getScapTriceps();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiagnostic($diagnostic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiagnostic', array($diagnostic));

        return parent::setDiagnostic($diagnostic);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiagnostic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiagnostic', array());

        return parent::getDiagnostic();
    }

    /**
     * {@inheritDoc}
     */
    public function setPatient(\Massil\MedicalBundle\Entity\Patient $patient)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPatient', array($patient));

        return parent::setPatient($patient);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatient', array());

        return parent::getPatient();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaille($taille)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaille', array($taille));

        return parent::setTaille($taille);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaille', array());

        return parent::getTaille();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrdonnance(\Massil\MedicalBundle\Entity\Ordonnance $ordonnance = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrdonnance', array($ordonnance));

        return parent::setOrdonnance($ordonnance);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrdonnance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrdonnance', array());

        return parent::getOrdonnance();
    }

    /**
     * {@inheritDoc}
     */
    public function setExamen(\Massil\MedicalBundle\Entity\Examen $examen = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExamen', array($examen));

        return parent::setExamen($examen);
    }

    /**
     * {@inheritDoc}
     */
    public function getExamen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExamen', array());

        return parent::getExamen();
    }

}
